// <auto-generated />
using AgeOfEmpiresTrainer.Api;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgeOfEmpiresTrainer.Api.Migrations
{
    [DbContext(typeof(AoeTrainerContext))]
    partial class AoeTrainerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AgeOfEmpiresTrainer.Api.AIPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Civilization")
                        .HasColumnType("int");

                    b.Property<bool>("Defeated")
                        .HasColumnType("bit");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("int");

                    b.Property<int>("GameResultId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameResultId");

                    b.ToTable("AIPlayers");
                });

            modelBuilder.Entity("AgeOfEmpiresTrainer.Api.GameResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte>("CivilizationLevel")
                        .HasColumnType("tinyint");

                    b.Property<int>("GameStatus")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("NumberOfAIPlayers")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("GameResults");
                });

            modelBuilder.Entity("AgeOfEmpiresTrainer.Api.AIPlayer", b =>
                {
                    b.HasOne("AgeOfEmpiresTrainer.Api.GameResult", "GameResult")
                        .WithMany("AIPlayers")
                        .HasForeignKey("GameResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameResult");
                });

            modelBuilder.Entity("AgeOfEmpiresTrainer.Api.GameResult", b =>
                {
                    b.Navigation("AIPlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
