// <auto-generated />
using DndLight;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DndLight.Data.Migrations
{
    [DbContext(typeof(DndContext))]
    [Migration("20211121144437_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DndLight.Door", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("InitiallyLocked")
                        .HasColumnType("bit");

                    b.Property<int>("LinkedRoom1Id")
                        .HasColumnType("int");

                    b.Property<int>("LinkedRoom2Id")
                        .HasColumnType("int");

                    b.Property<int?>("RequiredItemToUnlock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LinkedRoom1Id");

                    b.HasIndex("LinkedRoom2Id");

                    b.ToTable("Doors");
                });

            modelBuilder.Entity("DndLight.GameSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("InitialArmorStrength")
                        .HasColumnType("tinyint");

                    b.Property<byte>("InitialAttackStrength")
                        .HasColumnType("tinyint");

                    b.Property<byte>("InitialLifePower")
                        .HasColumnType("tinyint");

                    b.Property<int>("StartingRoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StartingRoomId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("DndLight.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("DndLight.Monster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte>("ArmorStrength")
                        .HasColumnType("tinyint");

                    b.Property<byte>("AttackStrength")
                        .HasColumnType("tinyint");

                    b.Property<bool>("AttacksOnEntry")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("LifePower")
                        .HasColumnType("tinyint");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Monsters");
                });

            modelBuilder.Entity("DndLight.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("DndLight.Door", b =>
                {
                    b.HasOne("DndLight.Room", "LinkedRoom1")
                        .WithMany()
                        .HasForeignKey("LinkedRoom1Id")
                        .IsRequired();

                    b.HasOne("DndLight.Room", "LinkedRoom2")
                        .WithMany()
                        .HasForeignKey("LinkedRoom2Id")
                        .IsRequired();

                    b.Navigation("LinkedRoom1");

                    b.Navigation("LinkedRoom2");
                });

            modelBuilder.Entity("DndLight.GameSetup", b =>
                {
                    b.HasOne("DndLight.Room", "StartingRoom")
                        .WithMany()
                        .HasForeignKey("StartingRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StartingRoom");
                });

            modelBuilder.Entity("DndLight.Item", b =>
                {
                    b.HasOne("DndLight.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DndLight.Monster", b =>
                {
                    b.HasOne("DndLight.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });
#pragma warning restore 612, 618
        }
    }
}
